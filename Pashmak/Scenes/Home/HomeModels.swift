//
//  HomeModels.swift
//  Pashmak
//
//  Created by Mohammad Porooshani on 8/26/18.
//  Copyright (c) 2018 Mohammad Porooshani. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import IGListKit

enum Home {
    typealias FetchHomeState = FetchState<ServerModels.Home, Error>
  struct UserProfile {

    let fullName: String
    let avatarURL: String
    let balance: String
    let balanceColor: UIColor
    let paid: String
    let cycleName: String

    init(homeData: ServerModels.Home, settings: Settings) {

      let balanceNumber = NSNumber(value: homeData.balance?.balance ?? 0)
      let balance = Formatters.TomanFormatter.string(from: balanceNumber) ?? ""

      let balanceColor = (homeData.balance?.balance ?? 0) < 0 ? UIColor.Pashmak.rudy : UIColor.Pashmak.kellyGreen

      let paidNumber = NSNumber(value: homeData.balance?.totalPaid ?? 0)
      let paidAmount = Formatters.TomanFormatter.string(from: paidNumber) ?? "0"

      let paid = "مجموع پرداختی این دوره: \(paidAmount)"

      let cycleName = homeData.cycle ?? ""

      self.fullName = settings.fullName
      self.avatarURL = settings.avatarURL
      self.cycleName = cycleName
      self.balance = balance
      self.balanceColor = balanceColor
      self.paid = paid

    }

  }

  enum Populate {

    struct Request {

    }
    struct Response {
      let state: FetchHomeState
    }

    enum ViewModel {

      struct Loading {
        let message: String
        let items: [ListDiffable]
      }

      struct Failed {
        let message: String
      }

      struct Success {
        let profile: UserProfile
        let items: [ListDiffable]
      }

    }
  }

  enum Refresh {
    struct Request {

    }

    struct Response {
      let state: FetchHomeState
    }

    enum ViewModel {
      struct Failed {
        let message: String
      }

      struct Success {
        let profile: UserProfile
        let items: [ListDiffable]
      }
    }
  }

  enum Signout {
    struct Request {

    }

    struct Response {

    }

    struct ViewModel {

    }
  }

}
