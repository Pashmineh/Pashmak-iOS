//
//  SplashRouter.swift
//  Pashmak
//
//  Created by Mohammad Porooshani on 8/21/18.
//  Copyright (c) 2018 Mohammad Porooshani. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Hero
import UIKit

@objc protocol SplashRoutingLogic {
  func routeToLogin(segue: UIStoryboardSegue?)
  func routeToHome(segue: UIStoryboardSegue?)
}

protocol SplashDataPassing {
  var dataStore: SplashDataStore? { get }
}

class SplashRouter: NSObject, SplashRoutingLogic, SplashDataPassing {
  weak var viewController: SplashViewController?
  var dataStore: SplashDataStore?

  func routeToLogin(segue: UIStoryboardSegue?) {

    guard let sourceVC = viewController, let sourceDS = dataStore else {
        return
      }

    func handleNonSegue() {
      let destVC = Storyboards.Main.instantiateViewController(withIdentifier: StoryboardsIDs.Main.Login) as? LoginViewController
      guard let destinationVC = destVC, var destinationDS = destinationVC.router?.dataStore else {
        return
      }

      passDataToLogin(source: sourceDS, destination: &destinationDS)
      prepareLogin(source: sourceVC, destination: destinationVC)
      navigateToLogin(source: sourceVC, destination: destinationVC)
    }

    guard let destinationVC = segue?.destination as? LoginViewController, var destinationDS = destinationVC.router?.dataStore else {
      handleNonSegue()
      return
    }

    passDataToLogin(source: sourceDS, destination: &destinationDS)
    prepareLogin(source: sourceVC, destination: destinationVC)

  }

  private func passDataToLogin(source: SplashDataStore, destination: inout LoginDataStore) {

  }

  private func prepareLogin(source: SplashViewController, destination: LoginViewController) {
    destination.hero.isEnabled = true
    source.navigationController?.hero.navigationAnimationType = .zoom
  }

  private func navigateToLogin(source: SplashViewController, destination: LoginViewController) {
    source.navigationController?.setViewControllers([destination], animated: true)
  }

  func routeToHome(segue: UIStoryboardSegue?) {

    guard let sourceVC = viewController, let sourceDS = dataStore else {
      return
    }

    func handleNonSegue() {

      let destVC = Storyboards.Main.instantiateViewController(withIdentifier: StoryboardsIDs.Main.Home) as? HomeViewController
      guard let destinationVC = destVC, var destinationDS = destVC?.router?.dataStore else {
        return
      }

      passDataToHome(source: sourceDS, destination: &destinationDS)
      prepareHome(source: sourceVC, destination: destinationVC)
      navigateToHome(source: sourceVC, destination: destinationVC)

    }

    guard let destinationVC = segue?.destination as? HomeViewController, var destinationDS = destinationVC.router?.dataStore else {
      handleNonSegue()
      return
    }

    passDataToHome(source: sourceDS, destination: &destinationDS)
    prepareHome(source: sourceVC, destination: destinationVC)

  }

  private func passDataToHome(source: SplashDataStore, destination: inout HomeDataStore) {

  }

  private func prepareHome(source: SplashViewController, destination: HomeViewController) {
    destination.hero.isEnabled = true
    source.navigationController?.hero.navigationAnimationType = .zoomOut
//    destination.populate()
  }

  private func navigateToHome(source: SplashViewController, destination: HomeViewController) {
    source.navigationController?.setViewControllers([destination], animated: true)
  }

}
