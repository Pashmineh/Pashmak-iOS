//
//  HomeInteractor.swift
//  Pashmak
//
//  Created by Mohammad Porooshani on 8/26/18.
//  Copyright (c) 2018 Mohammad Porooshani. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Async

protocol HomeBusinessLogic {
  func populate(request: Home.Populate.Request)
}

protocol HomeDataStore {

}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
  var presenter: HomePresentationLogic?

  func populate(request: Home.Populate.Request) {

    func sendLoading() {
      let response = Home.Populate.Response.init(state: .loading)
      presenter?.presentPopulate(response: response)
    }

    func sendFailed(_ error: Error) {
      let response = Home.Populate.Response.init(state: .failure(error))
      presenter?.presentPopulate(response: response)
    }

    sendLoading()

    PashmakServer.perform(request: ServerRequest.Home.fetchHome())
      .done { [weak self] (result: ServerData<ServerModels.Home>) in
        guard let self = self else { return }
        let homeData = result.model
        let settings = Settings.current

        Async.main(after: 2.0) {
          let response = Home.Populate.Response.init(state: Home.Populate.FetchHomeState.success((homeData, settings)))
          self.presenter?.presentPopulate(response: response)
        }
    }
      .catch { (error) in
        sendFailed(error)
    }

  }
}
