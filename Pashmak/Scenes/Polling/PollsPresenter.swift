//
//  PollsPresenter.swift
//  Pashmak
//
//  Created by Mohammad Porooshani on 9/17/18.
//  Copyright (c) 2018 Mohammad Porooshani. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import IGListKit
import UIKit

protocol PollsPresentationLogic {
func presentPopulate(response: Polls.Populate.Response)
}

class PollsPresenter: PollsPresentationLogic {
  weak var viewController: PollsDisplayLogic?

  func presentPopulate(response: Polls.Populate.Response) {
    let state = response.state

    switch state {
    case .loading:
      var items: [ListDiffable] = []
      (0...4).forEach { _ in
        items.append(ServerModels.Poll.PollItem())
      }
      let viewModel = Polls.Populate.ViewModel.Loading(items: items)
      viewController?.displayPopluateLoading(viewModel: viewModel)
    case .failure(let error):
      var message = "خطا در دریافت اطلاعات!"
      if case APIError.invalidResponseCode(let statusCode) = error {
        message = Texts.ServerErrors.random + "\n(\(statusCode))"
      }
      let viewModel = Polls.Populate.ViewModel.Failed(message: message)
      viewController?.displayPopluateFailed(viewModel: viewModel)
    case .success(let polls):
      let viewModel = Polls.Populate.ViewModel.Success(items: polls)
      viewController?.displayPopluateSucces(viewModel: viewModel)
    }
  }
}
