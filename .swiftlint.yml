disabled_rules: # rule identifiers to exclude from running
  # - colon
  # - comma
  # - control_statement
  - line_length
  - multiple_closures_with_trailing_closure
  - nesting
opt_in_rules: # some rules are only opt-in
  - fatal_error_message
  - let_var_whitespace
  - number_separator
  - operator_usage_whitespace
  - overridden_super_call
  - private_action
  - private_outlet
  - redundant_nil_coalescing
  - sorted_imports
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call
  - closure_end_indentation
  - anyobject_protocol
  - array_init
  - closure_spacing
  - attributes
  - conditional_returns_on_newline
  - contains_over_first_not_nil
  - convenience_type
  - empty_count
  - empty_string
  - explicit_init
  - extension_access_modifier
  - first_where
  - force_unwrapping
  - function_default_parameter_at_end
  - implicit_return
  - implicitly_unwrapped_optional
  - joined_default_parameter
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - missing_docs
  - modifier_order
  - multiline_arguments
  # - multiline_function_chains
  - multiline_parameters
  - nimble_operator
  - pattern_matching_keywords
  - prefixed_toplevel_constant
  - prohibited_super_call
  - quick_discouraged_call
  - redundant_type_annotation
  - required_enum_case
  - sorted_first_last
  - switch_case_on_newline
  - trailing_closure
  - unavailable_function
  - untyped_error_in_catch
  - yoda_condition

included: # paths to include during linting. `--path` is ignored if present.
  # - Source
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - Pashmak/Extensions/PashmakMessages.swift
  # - Source/ExcludedFolder
  # - Source/ExcludedFile.swift
  # - Source/*/ExcludedFile.swift # Exclude files with a wildcard

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: error # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 110
# they can set both implicitly with an array
type_body_length:
  - 400 # warning
  - 500 # error
# or they can set both explicitly
file_length:
  warning: 600
  error: 1200
function_body_length:
  warning: 50
  error: 60
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 50
    error: 60
  excluded:
    - iPhone # excluded via string
    - KD
    - QR
    - KYC
    - PFM
    - SEP
    - OTP
    - property
    - iBeacon
  allowed_symbols:
    - _

identifier_name:
  min_length: # only min_length
    error: 3 # only error
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey
    - Log
    - url
    - KD
    - top
    - QR
    - i
    - kd
    - ip
  allowed_symbols:
    - _
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube)
